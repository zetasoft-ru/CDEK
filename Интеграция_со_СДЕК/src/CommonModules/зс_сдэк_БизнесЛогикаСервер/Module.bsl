////////////////////////////////////////////////////////////////////////////////
// зс_сдэк_БизнесЛогикаСервер: процедуры и функции реализации бизнес-логики интеграции со СДЭК
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Функция ОбновитьПунктыВыдачиЗаказов() Экспорт
	
	// получить все пункты выдачи
	
	СтруктураВозврата = зс_сдэк_ИнтеграцияСервер.ПолучитьСписокПунктовВыдачиЗаказов(Неопределено, Неопределено);
	
	Если НЕ СтруктураВозврата.ДанныеПолучены Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	МассивКодовПунктовВыдачи = Новый Массив;
	
	Для каждого ОписаниеПунктаВыдачи Из СтруктураВозврата.Данные Цикл
	
		ТекущийПунктВыдачи = Справочники.зс_сдэк_ПунктыВыдачиЗаказов.НайтиПоКоду(ОписаниеПунктаВыдачи["Code"]);
		
		Если ТекущийПунктВыдачи = Справочники.зс_сдэк_ПунктыВыдачиЗаказов.ПустаяСсылка() Тогда // новый пункт выдачи
			
			ИзменитьПунктВыдачи(ОписаниеПунктаВыдачи);
			
		Иначе
			
			Если ТекущийПунктВыдачи.ХешОписанияПоставщика <> ОписаниеПунктаВыдачи["ХешОписанияПоставщика"] Тогда // измененный пункт выдачи
				
				ИзменитьПунктВыдачи(ОписаниеПунктаВыдачи, ТекущийПунктВыдачи);
				
			КонецЕсли;
			
		КонецЕсли;
		
		МассивКодовПунктовВыдачи.Добавить(ОписаниеПунктаВыдачи["Code"]);
		
	КонецЦикла;
	
	Выборка = Справочники.зс_сдэк_ПунктыВыдачиЗаказов.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если МассивКодовПунктовВыдачи.Найти(Выборка.Код) = Неопределено Тогда // удаленный пункт выдачи
			
			УдалитьПунктВыдачи(Выборка.Ссылка);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецФункции

Функция ПолучитьСрокИСтоимостьДоставки(ДатаОтправления, 
										КодГородаОтправления, 
										КодГородаПолучения, 
										ИдентификаторТарифа, 
										МассивОписанийТоваров, 
										Логин = Неопределено, 
										Пароль = Неопределено) Экспорт
										
	СтруктураПараметровЗапроса = Новый Структура;
	СтруктураПараметровЗапроса.Вставить("version", "1.0");
	СтруктураПараметровЗапроса.Вставить("dateExecute", ДатаОтправления);
	СтруктураПараметровЗапроса.Вставить("senderCityId", КодГородаОтправления);
	СтруктураПараметровЗапроса.Вставить("receiverCityId", КодГородаПолучения);
	СтруктураПараметровЗапроса.Вставить("tariffId", ИдентификаторТарифа);
	
	Если Логин <> Неопределено Тогда
	
		СтруктураПараметровЗапроса.Вставить("authLogin", Логин);
		
	КонецЕсли;
	
	Если Пароль = Неопределено Тогда
		
		СтруктураПараметровЗапроса.Вставить("secure", Пароль);
		
	КонецЕсли;
			
	СтруктураПараметровЗапроса.Вставить("goods", МассивОписанийТоваров);
										
	СтруктураВозврата = зс_сдэк_ИнтеграцияСервер.ПолучитьСтоимостьИСрокДоставки(СтруктураПараметровЗапроса);
	
	Если СтруктураВозврата.ДанныеПолучены Тогда
	
		СтруктураСроковИСтоимости = Новый Структура;
		СтруктураСроковИСтоимости.Вставить("Цена", СтруктураВозврата.Данные["price"]);
		СтруктураСроковИСтоимости.Вставить("МинимальныйСрокДоставки", СтруктураВозврата.Данные["deliveryPeriodMin"]);
		СтруктураСроковИСтоимости.Вставить("МаксимальныйСрокДоставки", СтруктураВозврата.Данные["deliveryPeriodMax"]);
		
		СтруктураВозврата.Данные = СтруктураСроковИСтоимости;
		
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ИзменитьПунктВыдачи(ОписаниеПунктаВыдачи, ТекущийПунктВыдачи = Неопределено) Экспорт
	
	ЭтоНовыйПунктВыдачи = Ложь;
	
	Если ЗначениеЗаполнено(ТекущийПунктВыдачи) Тогда
		
		ИзмененныйПунктВыдачи = ТекущийПунктВыдачи.ПолучитьОбъект();
		
	Иначе
		
		ЭтоНовыйПунктВыдачи = Истина;
		
		ИзмененныйПунктВыдачи = Справочники.зс_сдэк_ПунктыВыдачиЗаказов.СоздатьЭлемент();
		
	КонецЕсли;
		
	Для каждого Поле Из ОписаниеПунктаВыдачи Цикл
	
		Если Поле.Ключ = "Code" Тогда
			
			ИзмененныйПунктВыдачи.Код = Поле.Значение;
			
		ИначеЕсли Поле.Ключ = "Name" Тогда
			
			ИзмененныйПунктВыдачи.Наименование = Поле.Значение;
			
		ИначеЕсли Поле.Ключ = "WorkTimeY" Тогда
			
		ИначеЕсли Поле.Ключ = "OfficeImage" Тогда
			
		ИначеЕсли Поле.Ключ = "OfficeHowGo" Тогда
			
		Иначе
			
			ИзмененныйПунктВыдачи[Поле.Ключ] = Поле.Значение;
			
		КонецЕсли;
	
	КонецЦикла;
		
	ИзмененныйПунктВыдачи.Записать();
	
	Если ЭтоНовыйПунктВыдачи Тогда
		
		зс_сдэк_ПереопределяемыйСервер.ПриДобавленииПунктаВыдачиПереопределяемая("СДЭК", ИзмененныйПунктВыдачи.Ссылка);
		
	Иначе
		
		зс_сдэк_ПереопределяемыйСервер.ПриИзмененииПунктаВыдачиПереопределяемая("СДЭК", ИзмененныйПунктВыдачи.Ссылка);
		
	КонецЕсли;
	
	Возврат ИзмененныйПунктВыдачи.Ссылка;
	
КонецФункции

Процедура УдалитьПунктВыдачи(ТекущийПунктВыдачи) Экспорт
	
	ИзмененныйПунктВыдачи = ТекущийПунктВыдачи.ПолучитьОбъект();
	ИзмененныйПунктВыдачи.УстановитьПометкуУдаления(Истина);
	
	зс_сдэк_ПереопределяемыйСервер.ПриПометкеНаУдалениеПунктаВыдачиПереопределяемая("СДЭК", ИзмененныйПунктВыдачи.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти